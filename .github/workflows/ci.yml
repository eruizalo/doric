name: CI
on:
  pull_request:
    branches-ignore:
      - gh-pages
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_dependencies:
    runs-on: ubuntu-latest
    name: Check Dependencies
    steps:
      - name: PR Dependency Check
        uses: gregsdennis/dependencies-action@1.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - id: set-matrix
        uses: JoshuaTheMiller/conditional-build-matrix@0.1.0
        with:
          filter: '[]'
#  add_comment:
#    runs-on: ubuntu-latest
#    name: Create testing comment
#    steps:
#      - name: Find Comment
#        if: github.event_name == 'pull_request'
#        uses: peter-evans/find-comment@v2
#        id: fc
#        with:
#          issue-number: ${{ github.event.pull_request.number }}
#          body-includes: Test summary report
#      - name: Create initial comment
#        uses: peter-evans/create-or-update-comment@v2
#        with:
#          comment-id: ${{ steps.fc.outputs.comment-id }}
#          issue-number: ${{ github.event.pull_request.number }}
#          token: "${{ secrets.GITHUB_TOKEN }}"
#          body: |
#            Test summary report ðŸ“Š
#
#            | Spark version |    testing    |
#            |:-------------:|:-------------:|
#          edit-mode: replace
  build:
    #if: github.event.pull_request.draft == false
    needs: ["matrix_prep"] # ["add_comment"]
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check, build and doc ðŸŽ¯ - Spark [${{ matrix.spark }}] - scope [${{ matrix.scope }}]
        uses: ./.github/actions/check_build_and_doc
        env:
          SPARK_VERSION: ${{ matrix.spark }}
          SCOPE: ${{ matrix.scope }}
  matrix_end:
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - name: "Ensure matrix ends"
        run: |
          echo "Matrix end correctly"
        shell: bash
